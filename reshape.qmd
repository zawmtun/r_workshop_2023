# Reshaping data

## Reshaping data

```{r}
surveys_gw <- surveys |>
  filter(!is.na(weight)) |>
  group_by(plot_id, genus) |>
  summarize(mean_weight = mean(weight))

surveys_gw
str(surveys_gw)
```

Long to wide

```{r}
surveys_wide <- surveys_gw |>
  pivot_wider(names_from = genus, values_from = mean_weight)

str(surveys_wide)
```

```{r}
surveys_gw |>
  pivot_wider(names_from = genus, values_from = mean_weight, values_fill = 0) |>
  head()
```

Wide to long

```{r}
surveys_long <- surveys_wide |>
  pivot_longer(names_to = "genus", values_to = "mean_weight", cols = -plot_id)

str(surveys_long)
```

```{r}
surveys_wide |>
  pivot_longer(names_to = "genus", values_to = "mean_weight", cols = -plot_id) |>
  head()

```

## Challenge

Q. Reshape the surveys data frame with year as columns, plot_id as rows, and the number of genera per plot as the values. You will need to summarize before reshaping, and use the function n_distinct() to get the number of unique genera within a particular chunk of data. It's a powerful function! See ?n_distinct for more.

```{r}
dat <- surveys |> 
  group_by(year, plot_id) |> 
  summarise(genera = n_distinct(genus)) |> 
  ungroup() |> 
  pivot_wider(names_from = year, values_from = genera)
```

Q. Now take that data frame and pivot_longer() it, so each row is a unique plot_id by year combination.

```{r}
dat1 <- dat |> 
  pivot_longer(names_to = "year", values_to = "genus_num", cols = -plot_id)
```

Q. The surveys data set has two measurement columns: hindfoot_length and weight. This makes it difficult to do things like look at the relationship between mean values of each measurement per year in different plot types. Let's walk through a common solution for this type of problem. First, use pivot_longer() to create a dataset where we have a names column called measurement and a value column that takes on the value of either hindfoot_length or weight. Hint: You'll need to specify which columns will be part of the reshape.

```{r}
dat <- surveys |> 
  select(record_id, hindfoot_length, weight) |> 
  pivot_longer(names_to = "measurement", values_to = "value", cols = -record_id)

dat <- surveys |> 
  pivot_longer(names_to = "measurement", values_to = "value", cols = c(hindfoot_length, weight))
  
```

Q. With this new data set, calculate the average of each measurement in each year for each different plot_type. Then pivot_wider() them into a data set with a column for hindfoot_length and weight. Hint: You only need to specify the names and values columns for pivot_wider().

```{r}
dat_new <- dat |> 
  group_by(year, plot_type, measurement) |> 
  summarise(
    avg = mean(value, na.rm = TRUE)
  ) |> 
  pivot_wider(names_from = measurement, values_from = avg)
```

## Exporting data

```{r}
surveys_complete <- surveys |>
  filter(!is.na(weight),           # remove missing weight
         !is.na(hindfoot_length),  # remove missing hindfoot_length
         !is.na(sex))                # remove missing sex
```

```{r}
## Extract the most common species_id
species_counts <- surveys_complete |>
    count(species_id) |>
    filter(n >= 50)

species_counts$species_id

## Only keep the most common species
surveys_complete <- surveys_complete |>
  filter(species_id %in% species_counts$species_id)

```

```{r}
write_csv(surveys_complete, file = "ex/surveys_complete.csv")
```
